{"version":3,"sources":["Components/layout/SignedInLinks.js","store/actions/authActions.js","Components/layout/SignedOutLinks.js","Components/layout/Navbar.js","Components/dashboard/Notifications.js","Components/projects/ProjectSummary.js","Components/projects/ProjectList.js","Components/dashboard/Dashboard.js","Components/projects/ProjectDetails.js","Components/auth/SignIn.js","Components/auth/SingUp.js","Components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","id","viewType","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","useEffect","elems","document","querySelectorAll","M","Sidenav","init","link","uid","linkMobile","href","data-target","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","projectList","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","name","cols","rows","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","getFireStore","reduxFirestore","fbConfig","rffProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e92d2100.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  // props包含 viewType=>用於辨別類型產出對應Web或Mobile的NavBar\r\n  return (\r\n    <ul\r\n      id={props.viewType === \"mobile\" ? \"nav-mobile\" : \"nav\"}\r\n      className={\r\n        props.viewType === \"mobile\" ? \"sidenav\" : \"right hide-on-med-and-down\"\r\n      }\r\n    >\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = (props) => {\r\n  // props包含 viewType=>用於辨別類型產出對應Web或Mobile的NavBar\r\n  return (\r\n    <ul\r\n      id={props.viewType === \"mobile\" ? \"nav-mobile\" : \"nav\"}\r\n      className={\r\n        props.viewType === \"mobile\" ? \"sidenav\" : \"right hide-on-med-and-down\"\r\n      }\r\n    >\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">LogIn</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\"; // 導入materializ(給NavBar使用)\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n\r\n  // 因為Navbar每次登入狀態修改時會變動，所以需要追蹤auth重新綁定\r\n  useEffect(() => {\r\n    var elems = document.querySelectorAll(\".sidenav\");\r\n    M.Sidenav.init(elems, {});\r\n  }, [props.auth]);\r\n\r\n  const link = auth.uid ? (\r\n    <SignedInLinks viewType=\"web\" profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks viewType=\"web\" />\r\n  );\r\n\r\n  const linkMobile = auth.uid ? (\r\n    <SignedInLinks viewType=\"mobile\" profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks viewType=\"mobile\" />\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          StevePlan\r\n        </Link>\r\n        <a href=\"#\" data-target=\"nav-mobile\" className=\"sidenav-trigger\">\r\n          <i className=\"material-icons\">menu</i>\r\n        </a>\r\n        {link}\r\n        {linkMobile}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user}</span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {project.createAt\r\n            ? moment(project.createAt.toDate()).calendar()\r\n            : null}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  const projectList =\r\n    projects &&\r\n    projects.map((project) => {\r\n      return (\r\n        <Link to={\"/project/\" + project.id} key={project.id}>\r\n          <ProjectSummary project={project} />;\r\n        </Link>\r\n      );\r\n    });\r\n\r\n  return <div className=\"project-list section\">{projectList}</div>;\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n\r\n  if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\r\n\r\n  return project ? (\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-title\">{project.title}</div>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>\r\n            Posted by {project.authorFirstName} {project.authorLastName}\r\n          </div>\r\n          <div>\r\n            {project.createAt\r\n              ? moment(project.createAt.toDate()).calendar()\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container center\">\r\n      <p>is Loading...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: project,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              name=\"\"\r\n              id=\"content\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    // make async call to database\r\n    const firestore = getFirebase().firestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./Components/layout/Navbar\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\nimport ProjectDetails from \"./Components/projects/ProjectDetails\";\nimport SignIn from \"./Components/auth/SignIn\";\nimport SignUp from \"./Components/auth/SingUp\";\nimport CreateProject from \"./Components/projects/CreateProject\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nfunction App() {\n  useEffect(() => {\n    console.log(\"set Nav\");\n    var elems = document.querySelectorAll(\".sidenav\");\n    M.Sidenav.init(elems, {});\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component={SignIn}></Route>\n          <Route path=\"/signup\" component={SignUp}></Route>\n          <Route path=\"/create\" component={CreateProject}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return { ...state, authError: null };\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return { ...state, authError: \"Login Failed\" };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Create Project Error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  // Your web app's Firebase configuration\r\n  apiKey: \"AIzaSyAK78XzNXnUPEE_5uEzJ7xibK-ot88wp_Y\",\r\n  authDomain: \"react-redux-marioplan-741c2.firebaseapp.com\",\r\n  databaseURL: \"https://react-redux-marioplan-741c2.firebaseio.com\",\r\n  projectId: \"react-redux-marioplan-741c2\",\r\n  storageBucket: \"react-redux-marioplan-741c2.appspot.com\",\r\n  messagingSenderId: \"52276091857\",\r\n  appId: \"1:52276091857:web:7bbd588251745f19e2def0\",\r\n  measurementId: \"G-3VVNEM4DTS\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFireStore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirebase,\n        getFireStore,\n      })\n    ),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst rffProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}